/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ZkOBS, ZkOBSInterface } from "../../contracts/ZkOBS";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "wETHAddr_",
        type: "address",
      },
      {
        internalType: "address",
        name: "verifierAddr_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "genesisStateRoot",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "poseidon2Addr_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "BlockCommitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "tokenId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "enum Operations.OpType",
        name: "opType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "pubData",
        type: "bytes",
      },
    ],
    name: "NewL1Request",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "accountId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tsPubX",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tsPubY",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes20",
        name: "l2Addr",
        type: "bytes20",
      },
    ],
    name: "Register",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountIdOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountNum",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "accountId",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "tokenId",
            type: "uint16",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
        ],
        internalType: "struct Operations.Deposit",
        name: "deposit",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "checkDepositL1Request",
    outputs: [
      {
        internalType: "bool",
        name: "isExisted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "accountId",
            type: "uint32",
          },
          {
            internalType: "bytes20",
            name: "l2Addr",
            type: "bytes20",
          },
        ],
        internalType: "struct Operations.Register",
        name: "register",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "checkRegisterL1Request",
    outputs: [
      {
        internalType: "bool",
        name: "isExisted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "l1RequestNum",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "pendingRollupTxHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct ZkOBS.StoredBlock",
        name: "lastCommittedBlock",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "newStateRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "newTsRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "publicData",
            type: "bytes",
          },
          {
            internalType: "uint32[]",
            name: "publicDataOffsets",
            type: "uint32[]",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct ZkOBS.CommitBlock[]",
        name: "newBlocks",
        type: "tuple[]",
      },
    ],
    name: "commitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "committedBlockNum",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "committedL1RequestNum",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "executedBlockNum",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "firstL1RequestId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "l1RequestQueue",
    outputs: [
      {
        internalType: "bytes32",
        name: "hashedPubData",
        type: "bytes32",
      },
      {
        internalType: "enum Operations.OpType",
        name: "opType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingL1RequestNum",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "l1RequestNum",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "pendingRollupTxHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct ZkOBS.StoredBlock[]",
        name: "committedBlocks",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[1]",
            name: "commitment",
            type: "uint256[1]",
          },
        ],
        internalType: "struct ZkOBS.Proof[]",
        name: "proof",
        type: "tuple[]",
      },
    ],
    name: "proveBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "provedBlockNum",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tsPubX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tsPubY",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "registerERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tsPubX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tsPubY",
        type: "uint256",
      },
    ],
    name: "registerETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "storedBlockHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenIdOf",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenNum",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifierAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wETHAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040526005805463ffffffff191660641790553480156200002157600080fd5b50604051620034b5380380620034b5833981016040819052620000449162000216565b6200004f33620001a9565b6001600160a01b0384811660a090815284821660c09081528383166080908152604080518084018252600080825260208281018a81528385018381527fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706060808701918252868901868152878c0187815289518088018990529551868b015293516001600160401b0316918501919091529051978301979097529551818901529451858701528351808603909601865260e090940183528451948401949094207f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec556005805464010000000061ffff60201b1990911681178083559651909716855260019093529220805461ffff94869004851661ffff1990911617905580549193909260049262000184929004166200026a565b91906101000a81548161ffff021916908361ffff16021790555050505050506200029a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200021157600080fd5b919050565b600080600080608085870312156200022d57600080fd5b6200023885620001f9565b93506200024860208601620001f9565b9250604085015191506200025f60608601620001f9565b905092959194509250565b600061ffff8083168181036200029057634e487b7160e01b600052601160045260246000fd5b6001019392505050565b60805160a05160c0516131c8620002ed6000396000818161028e01526119340152600081816103f101528181611216015281816112570152818161143401526114750152600061158f01526131c86000f3fe6080604052600436106101815760003560e01c8063a615e171116100d1578063bfa87e461161008a578063e9d4e6a611610064578063e9d4e6a614610545578063ef4c4bef1461056a578063f2fde38b14610587578063f6326fb3146105a757600080fd5b8063bfa87e46146104ef578063cea94a1614610512578063d48bfca71461052557600080fd5b8063a615e171146103df578063ad732aeb14610413578063ad93b0ab14610430578063b1b16ff014610463578063b46dbe1a1461048a578063bc650ff3146104cf57600080fd5b8063663ea2e21161013e57806386316f8a1161011857806386316f8a146103215780638da5cb5b1461035f57806397be8fc51461037d5780639ba0d146146103a457600080fd5b8063663ea2e21461027c578063715018a6146102c8578063773c02d4146102dd57600080fd5b8063017146ed146101865780630aeaa4ba146101a8578063197620d7146101c857806323830621146101e85780633bce090b1461021d57806355f7edd41461023d575b600080fd5b34801561019257600080fd5b506101a66101a136600461254a565b6105af565b005b3480156101b457600080fd5b506101a66101c33660046127f6565b61083b565b3480156101d457600080fd5b506101a66101e3366004612b09565b610b29565b3480156101f457600080fd5b50610208610203366004612bca565b610cdd565b60405190151581526020015b60405180910390f35b34801561022957600080fd5b506101a6610238366004612c56565b610e14565b34801561024957600080fd5b5060055461026490600160701b90046001600160401b031681565b6040516001600160401b039091168152602001610214565b34801561028857600080fd5b506102b07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610214565b3480156102d457600080fd5b506101a6611067565b3480156102e957600080fd5b5061030e6102f8366004612c80565b60016020526000908152604090205461ffff1681565b60405161ffff9091168152602001610214565b34801561032d57600080fd5b5060065461034a9068010000000000000000900463ffffffff1681565b60405163ffffffff9091168152602001610214565b34801561036b57600080fd5b506000546001600160a01b03166102b0565b34801561038957600080fd5b5060055461026490600160301b90046001600160401b031681565b3480156103b057600080fd5b506103d16103bf366004612c9b565b60046020526000908152604090205481565b604051908152602001610214565b3480156103eb57600080fd5b506102b07f000000000000000000000000000000000000000000000000000000000000000081565b34801561041f57600080fd5b5060065461034a9063ffffffff1681565b34801561043c57600080fd5b5061034a61044b366004612c80565b60026020526000908152604090205463ffffffff1681565b34801561046f57600080fd5b5060055461026490600160b01b90046001600160401b031681565b34801561049657600080fd5b506104c16104a5366004612cb6565b6003602052600090815260409020805460019091015460ff1682565b604051610214929190612d09565b3480156104db57600080fd5b506102086104ea366004612d1d565b61107b565b3480156104fb57600080fd5b5060055461030e90640100000000900461ffff1681565b6101a6610520366004612d9e565b6111a9565b34801561053157600080fd5b506101a6610540366004612c80565b6112e5565b34801561055157600080fd5b5060065461034a90640100000000900463ffffffff1681565b34801561057657600080fd5b5060055461034a9063ffffffff1681565b34801561059357600080fd5b506101a66105a2366004612c80565b611354565b6101a66113cd565b3360009081526002602052604090205463ffffffff16156106175760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e7420616c7265616479207265676973746572656400000000000060448201526064015b60405180910390fd5b6001600160a01b0382166000818152600160205260408082205490516370a0823160e01b815230600482015261ffff909116928592916370a0823190602401602060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190612dc0565b6040516323b872dd60e01b81523360048201523060248201526001600160801b03861660448201529091506001600160a01b038316906323b872dd906064016020604051808303816000875af11580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190612dd9565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610761573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107859190612dc0565b9050600061079b6107968484612e11565b6114f6565b9050856001600160801b0316816001600160801b0316146107fe5760405162461bcd60e51b815260206004820152601b60248201527f4465706f73697420616d6f756e7420696e636f6e73697374656e740000000000604482015260640161060e565b3360009081526002602052604081205463ffffffff16900361082557610825338a8a611563565b610830338683611708565b505050505050505050565b8160405160200161084c9190612e24565b60408051601f19818403018152918152815160209283012060065463ffffffff1660009081526004909352912054146108c75760405162461bcd60e51b815260206004820152601c60248201527f436f6d6d6974656420626c6f636b20696e636f6e73697374656e637900000000604482015260640161060e565b60005b81518163ffffffff1610156109cb5761090283838363ffffffff16815181106108f5576108f5612e77565b60200260200101516117d2565b92508260400151600560168282829054906101000a90046001600160401b031661092c9190612e8d565b92506101000a8154816001600160401b0302191690836001600160401b03160217905550826040516020016109619190612e24565b60408051601f198184030181528282528051602091820120865163ffffffff90811660009081526004909352928220558551909116917fdf39762be389bd636a9efb2e4f3b26ac7d22eda4f0840f389209987a09e50fc99190a26109c481612eb4565b90506108ca565b508051600680546000906109e690849063ffffffff16612ed7565b825463ffffffff9182166101009390930a9283029190920219909116179055506005546001600160401b03600160701b82048116600160b01b909204161115610ae35760405162461bcd60e51b815260206004820152607f60248201527f546865206e756d626572206f6620746f74616c20636f6d6d697474656420707260448201527f696f72697479207265717565737473206e6565647320746f206265206c65737360648201527f207468616e206f7220657175616c20746f20746865206e756d626572206f662060848201527f746f74616c2070656e64696e67207072696f726974792072657175657374730060a482015260c40161060e565b50506006805463ffffffff811663ffffffff199091161790556005805467ffffffffffffffff60b01b198116600160b01b918290046001600160401b0316909102179055565b600654640100000000900463ffffffff1660005b8351811015610c3b5760046000610b55846001612ed7565b63ffffffff1663ffffffff16815260200190815260200160002054848281518110610b8257610b82612e77565b6020026020010151604051602001610b9a9190612e24565b6040516020818303038152906040528051906020012014610be25760405162461bcd60e51b81526020600482015260026024820152616f3160f01b604482015260640161060e565b610c1e848281518110610bf757610bf7612e77565b6020026020010151848381518110610c1157610c11612e77565b6020026020010151611914565b610c2782612eb4565b915080610c3381612ef4565b915050610b3d565b5060065463ffffffff9081169082161115610cb35760405162461bcd60e51b815260206004820152603260248201527f50726f76656420626c6f636b206e756d626572206578636565647320636f6d6d60448201527134ba3a32b210313637b1b590373ab6b132b960711b606482015260840161060e565b6006805463ffffffff9092166401000000000267ffffffff00000000199092169190911790555050565b6001600160401b038116600090815260036020818152604080842081518083019092528054825260018101548594929391929184019160ff90911690811115610d2857610d28612cd1565b6003811115610d3957610d39612cd1565b9052509050600281602001516003811115610d5657610d56612cd1565b14610d985760405162461bcd60e51b815260206004820152601260248201527113dc151e5c19481b9bdd081b585d18da195960721b604482015260640161060e565b610da6848260000151611a5d565b610e085760405162461bcd60e51b815260206004820152602d60248201527f4465706f7369742072657175657374206e6f74206578697374656420696e207060448201526c72696f7269747920717565756560981b606482015260840161060e565b60019150505b92915050565b3360009081526002602052604081205463ffffffff169003610e715760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d081b9bdd081c9959da5cdd195c995960521b604482015260640161060e565b6001600160a01b0382166000818152600160205260408082205490516370a0823160e01b815230600482015261ffff909116928592916370a0823190602401602060405180830381865afa158015610ecd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef19190612dc0565b6040516323b872dd60e01b81523360048201523060248201526001600160801b03861660448201529091506001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610f4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f739190612dd9565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdf9190612dc0565b90506000610ff06107968484612e11565b9050856001600160801b0316816001600160801b0316146110535760405162461bcd60e51b815260206004820152601b60248201527f4465706f73697420616d6f756e7420696e636f6e73697374656e740000000000604482015260640161060e565b61105e338683611708565b50505050505050565b61106f611a79565b6110796000611ad3565b565b6001600160401b038116600090815260036020818152604080842081518083019092528054825260018101548594929391929184019160ff909116908111156110c6576110c6612cd1565b60038111156110d7576110d7612cd1565b90525090506001816020015160038111156110f4576110f4612cd1565b146111365760405162461bcd60e51b815260206004820152601260248201527113dc151e5c19481b9bdd081b585d18da195960721b604482015260640161060e565b611144848260000151611b23565b610e085760405162461bcd60e51b815260206004820152603060248201527f52656769737465722072657175657374206e6f74206578697374656420696e2060448201526f4c31207265717565737420717565756560801b606482015260840161060e565b3360009081526002602052604090205463ffffffff161561120c5760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e7420616c72656164792072656769737465726564000000000000604482015260640161060e565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660009081526001602052604081205461ffff1690611253346114f6565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156112b057600080fd5b505af11580156112c4573d6000803e3d6000fd5b50505050506112d4338585611563565b6112df338383611708565b50505050565b6112ed611a79565b600580546001600160a01b0383166000908152600160205260409020805461ffff191661ffff64010000000093849004811691909117909155825460049261133792910416612f0d565b91906101000a81548161ffff021916908361ffff16021790555050565b61135c611a79565b6001600160a01b0381166113c15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060e565b6113ca81611ad3565b50565b3360009081526002602052604081205463ffffffff16900361142a5760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d081b9bdd081c9959da5cdd195c995960521b604482015260640161060e565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660009081526001602052604081205461ffff1690611471346114f6565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156114ce57600080fd5b505af11580156114e2573d6000803e3d6000fd5b50505050506114f2338383611708565b5050565b60006001600160801b0382111561155f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b606482015260840161060e565b5090565b6040805180820182528381526020810183905290516314d2f97b60e11b81526000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916329a5f2f6916115c291600401612f47565b602060405180830381865afa1580156115df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116039190612dc0565b6005805460609290921b925063ffffffff90911690600061162383612eb4565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b0386166000908152600260209081526040808320805463ffffffff1916948616948517905580518082019091529283526001600160601b031985169083015261168f82611b2b565b905061169d87600183611b85565b6040805163ffffffff85168152602081018890529081018690526001600160601b0319851660608201526001600160a01b038816907fa39b106e7a0ee88543b31a791d6243d6aa6c2b849483144a11f0209595b764639060800160405180910390a250505050505050565b6001600160a01b038316600090815260026020908152604080832054815160608101835263ffffffff90911680825261ffff8716938201939093526001600160801b03851691810191909152909161175f82611cbf565b905061176d86600283611b85565b6040805163ffffffff8516815261ffff871660208201526001600160801b0386168183015290516001600160a01b038816917fc8f60e32fd965b2469b4a5f60858ecd4e08a7ea7fbc470dcb9437fd07e9fbf4c919081900360600190a2505050505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091528260a001518260a00151101561189d5760405162461bcd60e51b815260206004820152605260248201527f54696d657374616d70206f6620746865206e657720626c6f636b206e6565647360448201527f20746f2062652067726561746572207468616e206f7220657175616c20746f206064820152717468652070726576696f757320626c6f636b60701b608482015260a40161060e565b60008060006118ab85611d34565b92509250925060006118be8787846120f1565b90506040518060c00160405280876000015163ffffffff16815260200187602001518152602001846001600160401b031681526020018581526020018281526020018760a0015181525094505050505092915050565b80516020820151604080840151606085015191516343753b4d60e01b81527f0000000000000000000000000000000000000000000000000000000000000000946001600160a01b038616946343753b4d94611976949293919291600401612f55565b602060405180830381865afa158015611993573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b79190612dd9565b6119f35760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b604482015260640161060e565b60808301516060830151516001600160fd1b03908116911614611a585760405162461bcd60e51b815260206004820152601860248201527f636f6d6d69746d656e7420696e636f6e73697374656e63790000000000000000604482015260640161060e565b505050565b600081611a6984611cbf565b8051906020012014905092915050565b6000546001600160a01b031633146110795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081611a69845b8051602080830151604051600160f81b9281019290925260e09290921b6001600160e01b03191660218201526001600160601b031990911660258201526060906039015b6040516020818303038152906040529050919050565b600554600090611bae906001600160401b03600160701b8204811691600160301b900416612e8d565b90506000828051906020012090506040518060400160405280828152602001856003811115611bdf57611bdf612cd1565b90526001600160401b03831660009081526003602081815260409092208351815591830151600180840180549293909260ff191691908490811115611c2657611c26612cd1565b02179055505060058054909150600e90611c4f90600160701b90046001600160401b0316612ffc565b91906101000a8154816001600160401b0302191690836001600160401b03160217905550846001600160a01b03167f3d42da54770ec4160e30921f7f1c788d1eda692956fde060912b4eea9adbdb2c838686604051611cb09392919061303c565b60405180910390a25050505050565b6060600282516020808501516040808701519051611b6f9594930160f89490941b6001600160f81b031916845260e09290921b6001600160e01b031916600184015260f01b6001600160f01b031916600583015260801b6fffffffffffffffffffffffffffffffff1916600782015260170190565b606081810151600554600092839290918390611d69906001600160401b03600160b01b8204811691600160301b900416612e8d565b82517fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470965060009550909150611da190600c906130a3565b15611e145760405162461bcd60e51b815260206004820152603a60248201527f5075626c69632064617461206c656e6774682073686f756c642062652065766560448201527f6e6c792064697669646564206279204348554e4b5f4259544553000000000000606482015260840161060e565b8151611e2290600c906130b7565b6001600160401b03811115611e3957611e39612590565b6040519080825280601f01601f191660200182016040528015611e63576020820181803683370190505b50925060005b8660800151518110156120e757600087608001518281518110611e8e57611e8e612e77565b602002602001015163ffffffff16905083518110611f045760405162461bcd60e51b815260206004820152602d60248201527f4f66667365742073686f756c64206265206c657373207468616e207075626c6960448201526c0c640c8c2e8c240d8cadccee8d609b1b606482015260840161060e565b611f0f600c826130a3565b15611f735760405162461bcd60e51b815260206004820152602e60248201527f4f66667365742073686f756c64206265206576656e6c7920646976696465642060448201526d6279204348554e4b5f425954455360901b606482015260840161060e565b6000611f80600c836130b7565b9050858181518110611f9457611f94612e77565b01602001516001600160f81b03191615611ff05760405162461bcd60e51b815260206004820152601f60248201527f4f66667365742073686f756c64206e6f7420626520736574206265666f726500604482015260640161060e565b600160f81b86828151811061200757612007612e77565b60200101906001600160f81b031916908160001a905350600085838151811061203257612032612e77565b016020015160f81c600381111561204b5761204b612cd1565b9050600181600381111561206157612061612cd1565b036120d15760006120818785612079600c60046130cb565b60ff166121a4565b905060008061208f83612265565b90925090506120a2826104ea8d8b612e8d565b508a6120ad81612ffc565b9b506120bf9050816102038d8b612e8d565b508a6120ca81612ffc565b9b50505050505b50505080806120df90612ef4565b915050611e69565b5050509193909250565b60008082846060015160405160200161210b9291906130e7565b60405160208183030381529060405290506002856020015185602001518660400151846040516020016121419493929190613116565b60408051601f198184030181529082905261215b9161314a565b602060405180830381855afa158015612178573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061219b9190612dc0565b95945050505050565b60606121b08284613166565b845110156121e45760405162461bcd60e51b81526020600482015260016024820152602d60f91b604482015260640161060e565b6000826001600160401b038111156121fe576121fe612590565b6040519080825280601f01601f191660200182016040528015612228576020820181803683370190505b509050821561225b57602081018381016020860187015b8183101561225757805183526020928301920161223f565b5050505b90505b9392505050565b6040805180820182526000808252602080830182905283516060810185528281529081018290529283015290600161229d8482612382565b63ffffffff16845290506122b184826123a5565b61ffff16602084015290506122c684826123bf565b6001600160801b0316604084015290506122e084826123d9565b6001600160601b0319166020850152835163ffffffff168352905060146010600261230d60046001613179565b6123179190613179565b6123219190613179565b61232b9190613179565b60ff16811461237c5760405162461bcd60e51b815260206004820152601b60248201527f526561642072656769737465722070756264617461206572726f720000000000604482015260640161060e565b50915091565b600080612390836004613166565b915061239c84846123f3565b90509250929050565b6000806123b3836002613166565b915061239c8484612443565b6000806123cd836010613166565b915061239c8484612488565b6000806123e7836014613166565b915061239c84846124cd565b600080612401836004613166565b905080845110156124385760405162461bcd60e51b81526020600482015260016024820152602b60f91b604482015260640161060e565b929092015192915050565b600080612451836002613166565b905080845110156124385760405162461bcd60e51b81526020600482015260016024820152601560fa1b604482015260640161060e565b600080612496836010613166565b905080845110156124385760405162461bcd60e51b81526020600482015260016024820152605760f81b604482015260640161060e565b60006124da826014613166565b8351101561250e5760405162461bcd60e51b81526020600482015260016024820152605360f81b604482015260640161060e565b50016020015190565b80356001600160a01b038116811461252e57600080fd5b919050565b80356001600160801b038116811461252e57600080fd5b6000806000806080858703121561256057600080fd5b843593506020850135925061257760408601612517565b915061258560608601612533565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156125c8576125c8612590565b60405290565b604051608081016001600160401b03811182821017156125c8576125c8612590565b604080519081016001600160401b03811182821017156125c8576125c8612590565b604051601f8201601f191681016001600160401b038111828210171561263a5761263a612590565b604052919050565b803563ffffffff8116811461252e57600080fd5b80356001600160401b038116811461252e57600080fd5b600060c0828403121561267f57600080fd5b60405160c081018181106001600160401b03821117156126a1576126a1612590565b6040529050806126b083612642565b8152602083013560208201526126c860408401612656565b6040820152606083013560608201526080830135608082015260a083013560a08201525092915050565b60006001600160401b0382111561270b5761270b612590565b5060051b60200190565b600082601f83011261272657600080fd5b81356001600160401b0381111561273f5761273f612590565b612752601f8201601f1916602001612612565b81815284602083860101111561276757600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261279557600080fd5b813560206127aa6127a5836126f2565b612612565b82815260059290921b840181019181810190868411156127c957600080fd5b8286015b848110156127eb576127de81612642565b83529183019183016127cd565b509695505050505050565b60008060e0838503121561280957600080fd5b612813848461266d565b915060c08301356001600160401b038082111561282f57600080fd5b818501915085601f83011261284357600080fd5b813560206128536127a5836126f2565b82815260059290921b8401810191818101908984111561287257600080fd5b8286015b848110156129355780358681111561288d57600080fd5b870160c0818d03601f190112156128a357600080fd5b6128ab6125a6565b6128b6868301612642565b8152604082013586820152606082013560408201526080820135888111156128de5760008081fd5b6128ec8e8883860101612715565b60608301525060a080830135898111156129065760008081fd5b6129148f8983870101612784565b60808401525060c09290920135918101919091528352918301918301612876565b508096505050505050509250929050565b600082601f83011261295757600080fd5b61295f6125f0565b80604084018581111561297157600080fd5b845b8181101561298b578035845260209384019301612973565b509095945050505050565b600082601f8301126129a757600080fd5b60405160208082018281106001600160401b03821117156129ca576129ca612590565b60405281848201868111156129de57600080fd5b855b818110156129f757803583529183019183016129e0565b50929695505050505050565b600082601f830112612a1457600080fd5b81356020612a246127a5836126f2565b8281526101209283028501820192828201919087851115612a4457600080fd5b8387015b85811015612afc5781818a031215612a605760008081fd5b612a686125ce565b612a728a83612946565b815260408a605f840112612a865760008081fd5b612a8e6125f0565b8060c085018d811115612aa15760008081fd5b8386015b81811015612ac457612ab78f82612946565b8452928a01928401612aa5565b50818a860152612ad48e82612946565b8486015250505050612aea8a6101008401612996565b60608201528452928401928101612a48565b5090979650505050505050565b60008060408385031215612b1c57600080fd5b82356001600160401b0380821115612b3357600080fd5b818501915085601f830112612b4757600080fd5b81356020612b576127a5836126f2565b82815260c0928302850182019282820191908a851115612b7657600080fd5b958301955b84871015612b9c57612b8d8b8861266d565b83529586019591830191612b7b565b5096505086013592505080821115612bb357600080fd5b50612bc085828601612a03565b9150509250929050565b6000808284036080811215612bde57600080fd5b6060811215612bec57600080fd5b50604051606081018181106001600160401b0382111715612c0f57612c0f612590565b604052612c1b84612642565b8152602084013561ffff81168114612c3257600080fd5b6020820152612c4360408501612533565b6040820152915061239c60608401612656565b60008060408385031215612c6957600080fd5b612c7283612517565b915061239c60208401612533565b600060208284031215612c9257600080fd5b61225e82612517565b600060208284031215612cad57600080fd5b61225e82612642565b600060208284031215612cc857600080fd5b61225e82612656565b634e487b7160e01b600052602160045260246000fd5b60048110612d0557634e487b7160e01b600052602160045260246000fd5b9052565b8281526040810161225e6020830184612ce7565b6000808284036060811215612d3157600080fd5b6040811215612d3f57600080fd5b50604051604081018181106001600160401b0382111715612d6257612d62612590565b604052612d6e84612642565b815260208401356001600160601b031981168114612d8b57600080fd5b6020820152915061239c60408401612656565b60008060408385031215612db157600080fd5b50508035926020909101359150565b600060208284031215612dd257600080fd5b5051919050565b600060208284031215612deb57600080fd5b8151801515811461225e57600080fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610e0e57610e0e612dfb565b600060c08201905063ffffffff8351168252602083015160208301526001600160401b036040840151166040830152606083015160608301526080830151608083015260a083015160a083015292915050565b634e487b7160e01b600052603260045260246000fd5b6001600160401b03818116838216019080821115612ead57612ead612dfb565b5092915050565b600063ffffffff808316818103612ecd57612ecd612dfb565b6001019392505050565b63ffffffff818116838216019080821115612ead57612ead612dfb565b600060018201612f0657612f06612dfb565b5060010190565b600061ffff808316818103612ecd57612ecd612dfb565b8060005b60028110156112df578151845260209384019390910190600101612f28565b60408101610e0e8284612f24565b6101208101612f648287612f24565b60408083018660005b6002808210612f7c5750612fb7565b82518460005b83811015612fa0578251825260209283019290910190600101612f82565b505050928401925060209190910190600101612f6d565b50505050612fc860c0830185612f24565b61010082018360005b6001811015612ff0578151835260209283019290910190600101612fd1565b50505095945050505050565b60006001600160401b03808316818103612ecd57612ecd612dfb565b60005b8381101561303357818101518382015260200161301b565b50506000910152565b6001600160401b03841681526130556020820184612ce7565b6060604082015260008251806060840152613077816080850160208701613018565b601f01601f191691909101608001949350505050565b634e487b7160e01b600052601260045260246000fd5b6000826130b2576130b261308d565b500690565b6000826130c6576130c661308d565b500490565b60ff8181168382160290811690818114612ead57612ead612dfb565b600083516130f9818460208801613018565b83519083019061310d818360208801613018565b01949350505050565b8481528360208201528260408201526000825161313a816060850160208701613018565b9190910160600195945050505050565b6000825161315c818460208701613018565b9190910192915050565b80820180821115610e0e57610e0e612dfb565b60ff8181168382160190811115610e0e57610e0e612dfb56fea2646970667358221220de665fd7d1b6dd89e7bc3375fe6f778637ec6e9eb8a9f73eeb12f2b20f9cebc164736f6c63430008110033";

type ZkOBSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZkOBSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZkOBS__factory extends ContractFactory {
  constructor(...args: ZkOBSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    wETHAddr_: PromiseOrValue<string>,
    verifierAddr_: PromiseOrValue<string>,
    genesisStateRoot: PromiseOrValue<BytesLike>,
    poseidon2Addr_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZkOBS> {
    return super.deploy(
      wETHAddr_,
      verifierAddr_,
      genesisStateRoot,
      poseidon2Addr_,
      overrides || {}
    ) as Promise<ZkOBS>;
  }
  override getDeployTransaction(
    wETHAddr_: PromiseOrValue<string>,
    verifierAddr_: PromiseOrValue<string>,
    genesisStateRoot: PromiseOrValue<BytesLike>,
    poseidon2Addr_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      wETHAddr_,
      verifierAddr_,
      genesisStateRoot,
      poseidon2Addr_,
      overrides || {}
    );
  }
  override attach(address: string): ZkOBS {
    return super.attach(address) as ZkOBS;
  }
  override connect(signer: Signer): ZkOBS__factory {
    return super.connect(signer) as ZkOBS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZkOBSInterface {
    return new utils.Interface(_abi) as ZkOBSInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZkOBS {
    return new Contract(address, _abi, signerOrProvider) as ZkOBS;
  }
}
